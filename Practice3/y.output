Terminals unused in grammar

   WHILE


Grammar

    0 $accept: start $end

    1 start: PREPROC start
    2      | VarDec ';' start
    3      | FunDef start
    4      | %empty

    5 VarDec: DataType VarList

    6 VarList: IDENTIFIER
    7        | IDENTIFIER ',' VarList
    8        | IDENTIFIER '=' Expr
    9        | IDENTIFIER '=' Expr ',' VarList

   10 DataType: INT

   11 Expr: Expr GE Expr
   12     | Expr NE Expr
   13     | Expr '*' Expr
   14     | Expr AND Expr
   15     | Expr '=' Expr
   16     | Expr '<' Expr
   17     | Term

   18 Term: IDENTIFIER
   19     | INCREMENT IDENTIFIER
   20     | INT_CONSTANT
   21     | FLOAT_CONSTANT
   22     | STRING_CONSTANT

   23 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan BlockStat
   24       | DataType IDENTIFIER '(' ')' BlockStat

   25 OpenParan: '('

   26 CloseParan: ')'

   27 ParamList: DataType IDENTIFIER
   28          | DataType IDENTIFIER ',' ParamList

   29 $@1: %empty

   30 BlockStat: '{' $@1 StatType '}'

   31 StatType: BlockStat StatType
   32         | SingleStat StatType
   33         | %empty

   34 SingleStat: ';'
   35           | Expr ';'
   36           | IfStat
   37           | VarDec ';'
   38           | BREAK ';'
   39           | ForStat

   40 IfStat: IF '(' Expr ')' BlockStat
   41       | IF '(' Expr ')' BlockStat ELSE BlockStat
   42       | IF '(' Expr ')' BlockStat ELSE SingleStat
   43       | IF '(' Expr ')' SingleStat ELSE SingleStat

   44 $@2: %empty

   45 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' $@2 BlockStat


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24 25 40 41 42 43 45
')' (41) 24 26 40 41 42 43 45
'*' (42) 13
',' (44) 7 9 28
';' (59) 2 34 35 37 38 45
'<' (60) 16
'=' (61) 8 9 15
'{' (123) 30
'}' (125) 30
error (256)
PREPROC (258) 1
IF (259) 40 41 42 43
ELSE (260) 41 42 43
WHILE (261)
FOR (262) 45
INT (263) 10
BREAK (264) 38
STRING_CONSTANT (265) 22
INT_CONSTANT (266) 20
FLOAT_CONSTANT (267) 21
IDENTIFIER (268) 6 7 8 9 18 19 23 24 27 28
NE (269) 12
GE (270) 11
AND (271) 14
INCREMENT (272) 19
IFX (273)


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
start (29)
    on left: 1 2 3 4, on right: 0 1 2 3
VarDec (30)
    on left: 5, on right: 2 37 45
VarList (31)
    on left: 6 7 8 9, on right: 5 7 9
DataType (32)
    on left: 10, on right: 5 23 24 27 28
Expr (33)
    on left: 11 12 13 14 15 16 17, on right: 8 9 11 12 13 14 15 16
    35 40 41 42 43 45
Term (34)
    on left: 18 19 20 21 22, on right: 17
FunDef (35)
    on left: 23 24, on right: 3
OpenParan (36)
    on left: 25, on right: 23
CloseParan (37)
    on left: 26, on right: 23
ParamList (38)
    on left: 27 28, on right: 23 28
BlockStat (39)
    on left: 30, on right: 23 24 31 40 41 42 45
$@1 (40)
    on left: 29, on right: 30
StatType (41)
    on left: 31 32 33, on right: 30 31 32
SingleStat (42)
    on left: 34 35 36 37 38 39, on right: 32 42 43
IfStat (43)
    on left: 40 41 42 43, on right: 36
ForStat (44)
    on left: 45, on right: 39
$@2 (45)
    on left: 44, on right: 45


State 0

    0 $accept: . start $end

    PREPROC  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (start)

    start     go to state 3
    VarDec    go to state 4
    DataType  go to state 5
    FunDef    go to state 6


State 1

    1 start: PREPROC . start

    PREPROC  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (start)

    start     go to state 7
    VarDec    go to state 4
    DataType  go to state 5
    FunDef    go to state 6


State 2

   10 DataType: INT .

    $default  reduce using rule 10 (DataType)


State 3

    0 $accept: start . $end

    $end  shift, and go to state 8


State 4

    2 start: VarDec . ';' start

    ';'  shift, and go to state 9


State 5

    5 VarDec: DataType . VarList
   23 FunDef: DataType . IDENTIFIER OpenParan ParamList CloseParan BlockStat
   24       | DataType . IDENTIFIER '(' ')' BlockStat

    IDENTIFIER  shift, and go to state 10

    VarList  go to state 11


State 6

    3 start: FunDef . start

    PREPROC  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (start)

    start     go to state 12
    VarDec    go to state 4
    DataType  go to state 5
    FunDef    go to state 6


State 7

    1 start: PREPROC start .

    $default  reduce using rule 1 (start)


State 8

    0 $accept: start $end .

    $default  accept


State 9

    2 start: VarDec ';' . start

    PREPROC  shift, and go to state 1
    INT      shift, and go to state 2

    $default  reduce using rule 4 (start)

    start     go to state 13
    VarDec    go to state 4
    DataType  go to state 5
    FunDef    go to state 6


State 10

    6 VarList: IDENTIFIER .
    7        | IDENTIFIER . ',' VarList
    8        | IDENTIFIER . '=' Expr
    9        | IDENTIFIER . '=' Expr ',' VarList
   23 FunDef: DataType IDENTIFIER . OpenParan ParamList CloseParan BlockStat
   24       | DataType IDENTIFIER . '(' ')' BlockStat

    '='  shift, and go to state 14
    ','  shift, and go to state 15
    '('  shift, and go to state 16

    $default  reduce using rule 6 (VarList)

    OpenParan  go to state 17


State 11

    5 VarDec: DataType VarList .

    $default  reduce using rule 5 (VarDec)


State 12

    3 start: FunDef start .

    $default  reduce using rule 3 (start)


State 13

    2 start: VarDec ';' start .

    $default  reduce using rule 2 (start)


State 14

    8 VarList: IDENTIFIER '=' . Expr
    9        | IDENTIFIER '=' . Expr ',' VarList

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 23
    Term  go to state 24


State 15

    7 VarList: IDENTIFIER ',' . VarList

    IDENTIFIER  shift, and go to state 25

    VarList  go to state 26


State 16

   24 FunDef: DataType IDENTIFIER '(' . ')' BlockStat
   25 OpenParan: '(' .

    ')'  shift, and go to state 27

    $default  reduce using rule 25 (OpenParan)


State 17

   23 FunDef: DataType IDENTIFIER OpenParan . ParamList CloseParan BlockStat

    INT  shift, and go to state 2

    DataType   go to state 28
    ParamList  go to state 29


State 18

   22 Term: STRING_CONSTANT .

    $default  reduce using rule 22 (Term)


State 19

   20 Term: INT_CONSTANT .

    $default  reduce using rule 20 (Term)


State 20

   21 Term: FLOAT_CONSTANT .

    $default  reduce using rule 21 (Term)


State 21

   18 Term: IDENTIFIER .

    $default  reduce using rule 18 (Term)


State 22

   19 Term: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 30


State 23

    8 VarList: IDENTIFIER '=' Expr .
    9        | IDENTIFIER '=' Expr . ',' VarList
   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '='  shift, and go to state 34
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36
    ','  shift, and go to state 37

    $default  reduce using rule 8 (VarList)


State 24

   17 Expr: Term .

    $default  reduce using rule 17 (Expr)


State 25

    6 VarList: IDENTIFIER .
    7        | IDENTIFIER . ',' VarList
    8        | IDENTIFIER . '=' Expr
    9        | IDENTIFIER . '=' Expr ',' VarList

    '='  shift, and go to state 14
    ','  shift, and go to state 15

    $default  reduce using rule 6 (VarList)


State 26

    7 VarList: IDENTIFIER ',' VarList .

    $default  reduce using rule 7 (VarList)


State 27

   24 FunDef: DataType IDENTIFIER '(' ')' . BlockStat

    '{'  shift, and go to state 38

    BlockStat  go to state 39


State 28

   27 ParamList: DataType . IDENTIFIER
   28          | DataType . IDENTIFIER ',' ParamList

    IDENTIFIER  shift, and go to state 40


State 29

   23 FunDef: DataType IDENTIFIER OpenParan ParamList . CloseParan BlockStat

    ')'  shift, and go to state 41

    CloseParan  go to state 42


State 30

   19 Term: INCREMENT IDENTIFIER .

    $default  reduce using rule 19 (Term)


State 31

   12 Expr: Expr NE . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 43
    Term  go to state 24


State 32

   11 Expr: Expr GE . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 44
    Term  go to state 24


State 33

   14 Expr: Expr AND . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 45
    Term  go to state 24


State 34

   15 Expr: Expr '=' . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 46
    Term  go to state 24


State 35

   16 Expr: Expr '<' . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 47
    Term  go to state 24


State 36

   13 Expr: Expr '*' . Expr

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 48
    Term  go to state 24


State 37

    9 VarList: IDENTIFIER '=' Expr ',' . VarList

    IDENTIFIER  shift, and go to state 25

    VarList  go to state 49


State 38

   30 BlockStat: '{' . $@1 StatType '}'

    $default  reduce using rule 29 ($@1)

    $@1  go to state 50


State 39

   24 FunDef: DataType IDENTIFIER '(' ')' BlockStat .

    $default  reduce using rule 24 (FunDef)


State 40

   27 ParamList: DataType IDENTIFIER .
   28          | DataType IDENTIFIER . ',' ParamList

    ','  shift, and go to state 51

    $default  reduce using rule 27 (ParamList)


State 41

   26 CloseParan: ')' .

    $default  reduce using rule 26 (CloseParan)


State 42

   23 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan . BlockStat

    '{'  shift, and go to state 38

    BlockStat  go to state 52


State 43

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   12     | Expr NE Expr .
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr

    '<'  shift, and go to state 35
    '*'  shift, and go to state 36

    $default  reduce using rule 12 (Expr)


State 44

   11 Expr: Expr . GE Expr
   11     | Expr GE Expr .
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr

    '<'  shift, and go to state 35
    '*'  shift, and go to state 36

    $default  reduce using rule 11 (Expr)


State 45

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   14     | Expr AND Expr .
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr

    '<'  shift, and go to state 35
    '*'  shift, and go to state 36

    $default  reduce using rule 14 (Expr)


State 46

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   15     | Expr '=' Expr .
   16     | Expr . '<' Expr

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36

    $default  reduce using rule 15 (Expr)


State 47

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr
   16     | Expr '<' Expr .

    '*'  shift, and go to state 36

    $default  reduce using rule 16 (Expr)


State 48

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   13     | Expr '*' Expr .
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr

    $default  reduce using rule 13 (Expr)


State 49

    9 VarList: IDENTIFIER '=' Expr ',' VarList .

    $default  reduce using rule 9 (VarList)


State 50

   30 BlockStat: '{' $@1 . StatType '}'

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56
    '{'              shift, and go to state 38

    $default  reduce using rule 33 (StatType)

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    BlockStat   go to state 60
    StatType    go to state 61
    SingleStat  go to state 62
    IfStat      go to state 63
    ForStat     go to state 64


State 51

   28 ParamList: DataType IDENTIFIER ',' . ParamList

    INT  shift, and go to state 2

    DataType   go to state 28
    ParamList  go to state 65


State 52

   23 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan BlockStat .

    $default  reduce using rule 23 (FunDef)


State 53

   40 IfStat: IF . '(' Expr ')' BlockStat
   41       | IF . '(' Expr ')' BlockStat ELSE BlockStat
   42       | IF . '(' Expr ')' BlockStat ELSE SingleStat
   43       | IF . '(' Expr ')' SingleStat ELSE SingleStat

    '('  shift, and go to state 66


State 54

   45 ForStat: FOR . '(' VarDec ';' Expr ';' Expr ')' $@2 BlockStat

    '('  shift, and go to state 67


State 55

   38 SingleStat: BREAK . ';'

    ';'  shift, and go to state 68


State 56

   34 SingleStat: ';' .

    $default  reduce using rule 34 (SingleStat)


State 57

   37 SingleStat: VarDec . ';'

    ';'  shift, and go to state 69


State 58

    5 VarDec: DataType . VarList

    IDENTIFIER  shift, and go to state 25

    VarList  go to state 11


State 59

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr
   35 SingleStat: Expr . ';'

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '='  shift, and go to state 34
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36
    ';'  shift, and go to state 70


State 60

   31 StatType: BlockStat . StatType

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56
    '{'              shift, and go to state 38

    $default  reduce using rule 33 (StatType)

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    BlockStat   go to state 60
    StatType    go to state 71
    SingleStat  go to state 62
    IfStat      go to state 63
    ForStat     go to state 64


State 61

   30 BlockStat: '{' $@1 StatType . '}'

    '}'  shift, and go to state 72


State 62

   32 StatType: SingleStat . StatType

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56
    '{'              shift, and go to state 38

    $default  reduce using rule 33 (StatType)

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    BlockStat   go to state 60
    StatType    go to state 73
    SingleStat  go to state 62
    IfStat      go to state 63
    ForStat     go to state 64


State 63

   36 SingleStat: IfStat .

    $default  reduce using rule 36 (SingleStat)


State 64

   39 SingleStat: ForStat .

    $default  reduce using rule 39 (SingleStat)


State 65

   28 ParamList: DataType IDENTIFIER ',' ParamList .

    $default  reduce using rule 28 (ParamList)


State 66

   40 IfStat: IF '(' . Expr ')' BlockStat
   41       | IF '(' . Expr ')' BlockStat ELSE BlockStat
   42       | IF '(' . Expr ')' BlockStat ELSE SingleStat
   43       | IF '(' . Expr ')' SingleStat ELSE SingleStat

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 74
    Term  go to state 24


State 67

   45 ForStat: FOR '(' . VarDec ';' Expr ';' Expr ')' $@2 BlockStat

    INT  shift, and go to state 2

    VarDec    go to state 75
    DataType  go to state 58


State 68

   38 SingleStat: BREAK ';' .

    $default  reduce using rule 38 (SingleStat)


State 69

   37 SingleStat: VarDec ';' .

    $default  reduce using rule 37 (SingleStat)


State 70

   35 SingleStat: Expr ';' .

    $default  reduce using rule 35 (SingleStat)


State 71

   31 StatType: BlockStat StatType .

    $default  reduce using rule 31 (StatType)


State 72

   30 BlockStat: '{' $@1 StatType '}' .

    $default  reduce using rule 30 (BlockStat)


State 73

   32 StatType: SingleStat StatType .

    $default  reduce using rule 32 (StatType)


State 74

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr
   40 IfStat: IF '(' Expr . ')' BlockStat
   41       | IF '(' Expr . ')' BlockStat ELSE BlockStat
   42       | IF '(' Expr . ')' BlockStat ELSE SingleStat
   43       | IF '(' Expr . ')' SingleStat ELSE SingleStat

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '='  shift, and go to state 34
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36
    ')'  shift, and go to state 76


State 75

   45 ForStat: FOR '(' VarDec . ';' Expr ';' Expr ')' $@2 BlockStat

    ';'  shift, and go to state 77


State 76

   40 IfStat: IF '(' Expr ')' . BlockStat
   41       | IF '(' Expr ')' . BlockStat ELSE BlockStat
   42       | IF '(' Expr ')' . BlockStat ELSE SingleStat
   43       | IF '(' Expr ')' . SingleStat ELSE SingleStat

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56
    '{'              shift, and go to state 38

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    BlockStat   go to state 78
    SingleStat  go to state 79
    IfStat      go to state 63
    ForStat     go to state 64


State 77

   45 ForStat: FOR '(' VarDec ';' . Expr ';' Expr ')' $@2 BlockStat

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 80
    Term  go to state 24


State 78

   40 IfStat: IF '(' Expr ')' BlockStat .
   41       | IF '(' Expr ')' BlockStat . ELSE BlockStat
   42       | IF '(' Expr ')' BlockStat . ELSE SingleStat

    ELSE  shift, and go to state 81

    $default  reduce using rule 40 (IfStat)


State 79

   43 IfStat: IF '(' Expr ')' SingleStat . ELSE SingleStat

    ELSE  shift, and go to state 82


State 80

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr
   45 ForStat: FOR '(' VarDec ';' Expr . ';' Expr ')' $@2 BlockStat

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '='  shift, and go to state 34
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36
    ';'  shift, and go to state 83


State 81

   41 IfStat: IF '(' Expr ')' BlockStat ELSE . BlockStat
   42       | IF '(' Expr ')' BlockStat ELSE . SingleStat

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56
    '{'              shift, and go to state 38

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    BlockStat   go to state 84
    SingleStat  go to state 85
    IfStat      go to state 63
    ForStat     go to state 64


State 82

   43 IfStat: IF '(' Expr ')' SingleStat ELSE . SingleStat

    IF               shift, and go to state 53
    FOR              shift, and go to state 54
    INT              shift, and go to state 2
    BREAK            shift, and go to state 55
    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22
    ';'              shift, and go to state 56

    VarDec      go to state 57
    DataType    go to state 58
    Expr        go to state 59
    Term        go to state 24
    SingleStat  go to state 86
    IfStat      go to state 63
    ForStat     go to state 64


State 83

   45 ForStat: FOR '(' VarDec ';' Expr ';' . Expr ')' $@2 BlockStat

    STRING_CONSTANT  shift, and go to state 18
    INT_CONSTANT     shift, and go to state 19
    FLOAT_CONSTANT   shift, and go to state 20
    IDENTIFIER       shift, and go to state 21
    INCREMENT        shift, and go to state 22

    Expr  go to state 87
    Term  go to state 24


State 84

   41 IfStat: IF '(' Expr ')' BlockStat ELSE BlockStat .

    $default  reduce using rule 41 (IfStat)


State 85

   42 IfStat: IF '(' Expr ')' BlockStat ELSE SingleStat .

    $default  reduce using rule 42 (IfStat)


State 86

   43 IfStat: IF '(' Expr ')' SingleStat ELSE SingleStat .

    $default  reduce using rule 43 (IfStat)


State 87

   11 Expr: Expr . GE Expr
   12     | Expr . NE Expr
   13     | Expr . '*' Expr
   14     | Expr . AND Expr
   15     | Expr . '=' Expr
   16     | Expr . '<' Expr
   45 ForStat: FOR '(' VarDec ';' Expr ';' Expr . ')' $@2 BlockStat

    NE   shift, and go to state 31
    GE   shift, and go to state 32
    AND  shift, and go to state 33
    '='  shift, and go to state 34
    '<'  shift, and go to state 35
    '*'  shift, and go to state 36
    ')'  shift, and go to state 88


State 88

   45 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' . $@2 BlockStat

    $default  reduce using rule 44 ($@2)

    $@2  go to state 89


State 89

   45 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' $@2 . BlockStat

    '{'  shift, and go to state 38

    BlockStat  go to state 90


State 90

   45 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' $@2 BlockStat .

    $default  reduce using rule 45 (ForStat)
