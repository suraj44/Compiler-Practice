Terminals unused in grammar

   PLUSEQ
   DEC
   DEF


Grammar

    0 $accept: start $end

    1 start: PREPROCESS start
    2      | FunDec ';' start
    3      | FunDef start
    4      | VarDec ';' start
    5      | %empty

    6 FunDec: DataType IDENTIFIER OpenParan ParamList CloseParan
    7       | DataType IDENTIFIER '(' ')'

    8 $@1: %empty

    9 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan $@1 BlockStat
   10       | DataType IDENTIFIER '(' ')' BlockStat

   11 OpenParan: '('

   12 CloseParan: ')'

   13 DataType: VOID
   14         | INT
   15         | CHAR
   16         | FLOAT

   17 ParamList: DataType IDENTIFIER ',' ParamList
   18          | DataType IDENTIFIER

   19 VarDec: DataType VarList

   20 VarList: IDENTIFIER
   21        | IDENTIFIER ',' VarList
   22        | IDENTIFIER '[' ConstExpr ']'
   23        | IDENTIFIER '[' ConstExpr ']' ',' VarList
   24        | IDENTIFIER '=' Expr

   25 FunCall: IDENTIFIER '(' ArgList ')'
   26        | IDENTIFIER '(' ')'

   27 ReturnStat: RETURN
   28           | RETURN Expr

   29 ArgList: Expr ',' ArgList
   30        | STRING_CONSTANT ',' ArgList
   31        | Expr
   32        | STRING_CONSTANT

   33 StatType: SingleStat StatType
   34         | BlockStat StatType
   35         | %empty

   36 SingleStat: ';'
   37           | Expr ';'
   38           | ReturnStat ';'
   39           | VarDec ';'
   40           | IfStat
   41           | WhileStat
   42           | ForStat
   43           | BREAK ';'
   44           | CONTINUE ';'

   45 $@2: %empty

   46 BlockStat: '{' $@2 StatType '}'

   47 ConstExpr: INTEGER_CONSTANT
   48          | ConstExpr '+' ConstExpr
   49          | ConstExpr '-' ConstExpr
   50          | ConstExpr '*' ConstExpr
   51          | ConstExpr '/' ConstExpr
   52          | ConstExpr '%' ConstExpr
   53          | '(' ConstExpr ')'

   54 Expr: Term
   55     | Expr '+' Expr
   56     | Expr '-' Expr
   57     | Expr '/' Expr
   58     | Expr '*' Expr
   59     | Expr '%' Expr
   60     | Expr '<' Expr
   61     | Expr '>' Expr
   62     | Expr '=' Expr
   63     | '(' Expr ')'

   64 Term: INTEGER_CONSTANT
   65     | IDENTIFIER
   66     | IDENTIFIER '[' ConstExpr ']'
   67     | INCREMENT IDENTIFIER
   68     | DECREMENT IDENTIFIER
   69     | IDENTIFIER INCREMENT
   70     | IDENTIFIER DECREMENT
   71     | FunCall

   72 IfStat: IF '(' Expr ')' SingleStat
   73       | IF '(' Expr ')' BlockStat
   74       | IF '(' Expr ')' SingleStat ELSE BlockStat
   75       | IF '(' Expr ')' BlockStat ELSE BlockStat
   76       | IF '(' Expr ')' BlockStat ELSE SingleStat
   77       | IF '(' Expr ')' SingleStat ELSE SingleStat

   78 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' BlockStat
   79        | FOR '(' Expr ';' Expr ';' Expr ')' BlockStat

   80 WhileStat: WHILE '(' Expr ')' BlockStat


Terminals, with rules where they appear

$end (0) 0
'%' (37) 52 59
'(' (40) 7 10 11 25 26 53 63 72 73 74 75 76 77 78 79 80
')' (41) 7 10 12 25 26 53 63 72 73 74 75 76 77 78 79 80
'*' (42) 50 58
'+' (43) 48 55
',' (44) 17 21 23 29 30
'-' (45) 49 56
'/' (47) 51 57
';' (59) 2 4 36 37 38 39 43 44 78 79
'<' (60) 60
'=' (61) 24 62
'>' (62) 61
'[' (91) 22 23 66
']' (93) 22 23 66
'{' (123) 46
'}' (125) 46
error (256)
INT (258) 14
FLOAT (259) 16
WHILE (260) 80
FOR (261) 78 79
IF (262) 72 73 74 75 76 77
ELSE (263) 74 75 76 77
CHAR (264) 15
VOID (265) 13
RETURN (266) 27 28
BREAK (267) 43
CONTINUE (268) 44
INTEGER_CONSTANT (269) 47 64
IDENTIFIER (270) 6 7 9 10 17 18 20 21 22 23 24 25 26 65 66 67 68 69
    70
STRING_CONSTANT (271) 30 32
INCREMENT (272) 67 69
DECREMENT (273) 68 70
PLUSEQ (274)
PREPROCESS (275) 1
DEC (276)
DEF (277)
IFX (278)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
start (41)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4
FunDec (42)
    on left: 6 7, on right: 2
FunDef (43)
    on left: 9 10, on right: 3
$@1 (44)
    on left: 8, on right: 9
OpenParan (45)
    on left: 11, on right: 6 9
CloseParan (46)
    on left: 12, on right: 6 9
DataType (47)
    on left: 13 14 15 16, on right: 6 7 9 10 17 18 19
ParamList (48)
    on left: 17 18, on right: 6 9 17
VarDec (49)
    on left: 19, on right: 4 39 78
VarList (50)
    on left: 20 21 22 23 24, on right: 19 21 23
FunCall (51)
    on left: 25 26, on right: 71
ReturnStat (52)
    on left: 27 28, on right: 38
ArgList (53)
    on left: 29 30 31 32, on right: 25 29 30
StatType (54)
    on left: 33 34 35, on right: 33 34 46
SingleStat (55)
    on left: 36 37 38 39 40 41 42 43 44, on right: 33 72 74 76 77
BlockStat (56)
    on left: 46, on right: 9 10 34 73 74 75 76 78 79 80
$@2 (57)
    on left: 45, on right: 46
ConstExpr (58)
    on left: 47 48 49 50 51 52 53, on right: 22 23 48 49 50 51 52 53
    66
Expr (59)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 24 28 29 31 37
    55 56 57 58 59 60 61 62 63 72 73 74 75 76 77 78 79 80
Term (60)
    on left: 64 65 66 67 68 69 70 71, on right: 54
IfStat (61)
    on left: 72 73 74 75 76 77, on right: 40
ForStat (62)
    on left: 78 79, on right: 42
WhileStat (63)
    on left: 80, on right: 41


State 0

    0 $accept: . start $end

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    PREPROCESS  shift, and go to state 5

    $default  reduce using rule 5 (start)

    start     go to state 6
    FunDec    go to state 7
    FunDef    go to state 8
    DataType  go to state 9
    VarDec    go to state 10


State 1

   14 DataType: INT .

    $default  reduce using rule 14 (DataType)


State 2

   16 DataType: FLOAT .

    $default  reduce using rule 16 (DataType)


State 3

   15 DataType: CHAR .

    $default  reduce using rule 15 (DataType)


State 4

   13 DataType: VOID .

    $default  reduce using rule 13 (DataType)


State 5

    1 start: PREPROCESS . start

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    PREPROCESS  shift, and go to state 5

    $default  reduce using rule 5 (start)

    start     go to state 11
    FunDec    go to state 7
    FunDef    go to state 8
    DataType  go to state 9
    VarDec    go to state 10


State 6

    0 $accept: start . $end

    $end  shift, and go to state 12


State 7

    2 start: FunDec . ';' start

    ';'  shift, and go to state 13


State 8

    3 start: FunDef . start

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    PREPROCESS  shift, and go to state 5

    $default  reduce using rule 5 (start)

    start     go to state 14
    FunDec    go to state 7
    FunDef    go to state 8
    DataType  go to state 9
    VarDec    go to state 10


State 9

    6 FunDec: DataType . IDENTIFIER OpenParan ParamList CloseParan
    7       | DataType . IDENTIFIER '(' ')'
    9 FunDef: DataType . IDENTIFIER OpenParan ParamList CloseParan $@1 BlockStat
   10       | DataType . IDENTIFIER '(' ')' BlockStat
   19 VarDec: DataType . VarList

    IDENTIFIER  shift, and go to state 15

    VarList  go to state 16


State 10

    4 start: VarDec . ';' start

    ';'  shift, and go to state 17


State 11

    1 start: PREPROCESS start .

    $default  reduce using rule 1 (start)


State 12

    0 $accept: start $end .

    $default  accept


State 13

    2 start: FunDec ';' . start

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    PREPROCESS  shift, and go to state 5

    $default  reduce using rule 5 (start)

    start     go to state 18
    FunDec    go to state 7
    FunDef    go to state 8
    DataType  go to state 9
    VarDec    go to state 10


State 14

    3 start: FunDef start .

    $default  reduce using rule 3 (start)


State 15

    6 FunDec: DataType IDENTIFIER . OpenParan ParamList CloseParan
    7       | DataType IDENTIFIER . '(' ')'
    9 FunDef: DataType IDENTIFIER . OpenParan ParamList CloseParan $@1 BlockStat
   10       | DataType IDENTIFIER . '(' ')' BlockStat
   20 VarList: IDENTIFIER .
   21        | IDENTIFIER . ',' VarList
   22        | IDENTIFIER . '[' ConstExpr ']'
   23        | IDENTIFIER . '[' ConstExpr ']' ',' VarList
   24        | IDENTIFIER . '=' Expr

    '='  shift, and go to state 19
    '('  shift, and go to state 20
    ','  shift, and go to state 21
    '['  shift, and go to state 22

    $default  reduce using rule 20 (VarList)

    OpenParan  go to state 23


State 16

   19 VarDec: DataType VarList .

    $default  reduce using rule 19 (VarDec)


State 17

    4 start: VarDec ';' . start

    INT         shift, and go to state 1
    FLOAT       shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    PREPROCESS  shift, and go to state 5

    $default  reduce using rule 5 (start)

    start     go to state 24
    FunDec    go to state 7
    FunDef    go to state 8
    DataType  go to state 9
    VarDec    go to state 10


State 18

    2 start: FunDec ';' start .

    $default  reduce using rule 2 (start)


State 19

   24 VarList: IDENTIFIER '=' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 31
    Term     go to state 32


State 20

    7 FunDec: DataType IDENTIFIER '(' . ')'
   10 FunDef: DataType IDENTIFIER '(' . ')' BlockStat
   11 OpenParan: '(' .

    ')'  shift, and go to state 33

    $default  reduce using rule 11 (OpenParan)


State 21

   21 VarList: IDENTIFIER ',' . VarList

    IDENTIFIER  shift, and go to state 34

    VarList  go to state 35


State 22

   22 VarList: IDENTIFIER '[' . ConstExpr ']'
   23        | IDENTIFIER '[' . ConstExpr ']' ',' VarList

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 38


State 23

    6 FunDec: DataType IDENTIFIER OpenParan . ParamList CloseParan
    9 FunDef: DataType IDENTIFIER OpenParan . ParamList CloseParan $@1 BlockStat

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    DataType   go to state 39
    ParamList  go to state 40


State 24

    4 start: VarDec ';' start .

    $default  reduce using rule 4 (start)


State 25

   64 Term: INTEGER_CONSTANT .

    $default  reduce using rule 64 (Term)


State 26

   25 FunCall: IDENTIFIER . '(' ArgList ')'
   26        | IDENTIFIER . '(' ')'
   65 Term: IDENTIFIER .
   66     | IDENTIFIER . '[' ConstExpr ']'
   69     | IDENTIFIER . INCREMENT
   70     | IDENTIFIER . DECREMENT

    INCREMENT  shift, and go to state 41
    DECREMENT  shift, and go to state 42
    '('        shift, and go to state 43
    '['        shift, and go to state 44

    $default  reduce using rule 65 (Term)


State 27

   67 Term: INCREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 45


State 28

   68 Term: DECREMENT . IDENTIFIER

    IDENTIFIER  shift, and go to state 46


State 29

   63 Expr: '(' . Expr ')'

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 47
    Term     go to state 32


State 30

   71 Term: FunCall .

    $default  reduce using rule 71 (Term)


State 31

   24 VarList: IDENTIFIER '=' Expr .
   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 24 (VarList)


State 32

   54 Expr: Term .

    $default  reduce using rule 54 (Expr)


State 33

    7 FunDec: DataType IDENTIFIER '(' ')' .
   10 FunDef: DataType IDENTIFIER '(' ')' . BlockStat

    '{'  shift, and go to state 56

    $default  reduce using rule 7 (FunDec)

    BlockStat  go to state 57


State 34

   20 VarList: IDENTIFIER .
   21        | IDENTIFIER . ',' VarList
   22        | IDENTIFIER . '[' ConstExpr ']'
   23        | IDENTIFIER . '[' ConstExpr ']' ',' VarList
   24        | IDENTIFIER . '=' Expr

    '='  shift, and go to state 19
    ','  shift, and go to state 21
    '['  shift, and go to state 22

    $default  reduce using rule 20 (VarList)


State 35

   21 VarList: IDENTIFIER ',' VarList .

    $default  reduce using rule 21 (VarList)


State 36

   47 ConstExpr: INTEGER_CONSTANT .

    $default  reduce using rule 47 (ConstExpr)


State 37

   53 ConstExpr: '(' . ConstExpr ')'

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 58


State 38

   22 VarList: IDENTIFIER '[' ConstExpr . ']'
   23        | IDENTIFIER '[' ConstExpr . ']' ',' VarList
   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '/'  shift, and go to state 61
    '*'  shift, and go to state 62
    '%'  shift, and go to state 63
    ']'  shift, and go to state 64


State 39

   17 ParamList: DataType . IDENTIFIER ',' ParamList
   18          | DataType . IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 40

    6 FunDec: DataType IDENTIFIER OpenParan ParamList . CloseParan
    9 FunDef: DataType IDENTIFIER OpenParan ParamList . CloseParan $@1 BlockStat

    ')'  shift, and go to state 66

    CloseParan  go to state 67


State 41

   69 Term: IDENTIFIER INCREMENT .

    $default  reduce using rule 69 (Term)


State 42

   70 Term: IDENTIFIER DECREMENT .

    $default  reduce using rule 70 (Term)


State 43

   25 FunCall: IDENTIFIER '(' . ArgList ')'
   26        | IDENTIFIER '(' . ')'

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    STRING_CONSTANT   shift, and go to state 68
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29
    ')'               shift, and go to state 69

    FunCall  go to state 30
    ArgList  go to state 70
    Expr     go to state 71
    Term     go to state 32


State 44

   66 Term: IDENTIFIER '[' . ConstExpr ']'

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 72


State 45

   67 Term: INCREMENT IDENTIFIER .

    $default  reduce using rule 67 (Term)


State 46

   68 Term: DECREMENT IDENTIFIER .

    $default  reduce using rule 68 (Term)


State 47

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   63     | '(' Expr . ')'

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ')'  shift, and go to state 73


State 48

   62 Expr: Expr '=' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 74
    Term     go to state 32


State 49

   60 Expr: Expr '<' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 75
    Term     go to state 32


State 50

   61 Expr: Expr '>' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 76
    Term     go to state 32


State 51

   55 Expr: Expr '+' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 77
    Term     go to state 32


State 52

   56 Expr: Expr '-' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 78
    Term     go to state 32


State 53

   57 Expr: Expr '/' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 79
    Term     go to state 32


State 54

   58 Expr: Expr '*' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 80
    Term     go to state 32


State 55

   59 Expr: Expr '%' . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 81
    Term     go to state 32


State 56

   46 BlockStat: '{' . $@2 StatType '}'

    $default  reduce using rule 45 ($@2)

    $@2  go to state 82


State 57

   10 FunDef: DataType IDENTIFIER '(' ')' BlockStat .

    $default  reduce using rule 10 (FunDef)


State 58

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr
   53          | '(' ConstExpr . ')'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '/'  shift, and go to state 61
    '*'  shift, and go to state 62
    '%'  shift, and go to state 63
    ')'  shift, and go to state 83


State 59

   48 ConstExpr: ConstExpr '+' . ConstExpr

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 84


State 60

   49 ConstExpr: ConstExpr '-' . ConstExpr

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 85


State 61

   51 ConstExpr: ConstExpr '/' . ConstExpr

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 86


State 62

   50 ConstExpr: ConstExpr '*' . ConstExpr

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 87


State 63

   52 ConstExpr: ConstExpr '%' . ConstExpr

    INTEGER_CONSTANT  shift, and go to state 36
    '('               shift, and go to state 37

    ConstExpr  go to state 88


State 64

   22 VarList: IDENTIFIER '[' ConstExpr ']' .
   23        | IDENTIFIER '[' ConstExpr ']' . ',' VarList

    ','  shift, and go to state 89

    $default  reduce using rule 22 (VarList)


State 65

   17 ParamList: DataType IDENTIFIER . ',' ParamList
   18          | DataType IDENTIFIER .

    ','  shift, and go to state 90

    $default  reduce using rule 18 (ParamList)


State 66

   12 CloseParan: ')' .

    $default  reduce using rule 12 (CloseParan)


State 67

    6 FunDec: DataType IDENTIFIER OpenParan ParamList CloseParan .
    9 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan . $@1 BlockStat

    '{'       reduce using rule 8 ($@1)
    $default  reduce using rule 6 (FunDec)

    $@1  go to state 91


State 68

   30 ArgList: STRING_CONSTANT . ',' ArgList
   32        | STRING_CONSTANT .

    ','  shift, and go to state 92

    $default  reduce using rule 32 (ArgList)


State 69

   26 FunCall: IDENTIFIER '(' ')' .

    $default  reduce using rule 26 (FunCall)


State 70

   25 FunCall: IDENTIFIER '(' ArgList . ')'

    ')'  shift, and go to state 93


State 71

   29 ArgList: Expr . ',' ArgList
   31        | Expr .
   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ','  shift, and go to state 94

    $default  reduce using rule 31 (ArgList)


State 72

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr
   66 Term: IDENTIFIER '[' ConstExpr . ']'

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60
    '/'  shift, and go to state 61
    '*'  shift, and go to state 62
    '%'  shift, and go to state 63
    ']'  shift, and go to state 95


State 73

   63 Expr: '(' Expr ')' .

    $default  reduce using rule 63 (Expr)


State 74

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   62     | Expr '=' Expr .

    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 62 (Expr)


State 75

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   60     | Expr '<' Expr .
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 60 (Expr)


State 76

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   61     | Expr '>' Expr .
   62     | Expr . '=' Expr

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 61 (Expr)


State 77

   55 Expr: Expr . '+' Expr
   55     | Expr '+' Expr .
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 55 (Expr)


State 78

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   56     | Expr '-' Expr .
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 56 (Expr)


State 79

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   57     | Expr '/' Expr .
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    $default  reduce using rule 57 (Expr)


State 80

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   58     | Expr '*' Expr .
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    $default  reduce using rule 58 (Expr)


State 81

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   59     | Expr '%' Expr .
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    $default  reduce using rule 59 (Expr)


State 82

   46 BlockStat: '{' $@2 . StatType '}'

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    $default  reduce using rule 35 (StatType)

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    StatType    go to state 106
    SingleStat  go to state 107
    BlockStat   go to state 108
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 83

   53 ConstExpr: '(' ConstExpr ')' .

    $default  reduce using rule 53 (ConstExpr)


State 84

   48 ConstExpr: ConstExpr . '+' ConstExpr
   48          | ConstExpr '+' ConstExpr .
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr

    '/'  shift, and go to state 61
    '*'  shift, and go to state 62
    '%'  shift, and go to state 63

    $default  reduce using rule 48 (ConstExpr)


State 85

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   49          | ConstExpr '-' ConstExpr .
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr

    '/'  shift, and go to state 61
    '*'  shift, and go to state 62
    '%'  shift, and go to state 63

    $default  reduce using rule 49 (ConstExpr)


State 86

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   51          | ConstExpr '/' ConstExpr .
   52          | ConstExpr . '%' ConstExpr

    $default  reduce using rule 51 (ConstExpr)


State 87

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   50          | ConstExpr '*' ConstExpr .
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr

    $default  reduce using rule 50 (ConstExpr)


State 88

   48 ConstExpr: ConstExpr . '+' ConstExpr
   49          | ConstExpr . '-' ConstExpr
   50          | ConstExpr . '*' ConstExpr
   51          | ConstExpr . '/' ConstExpr
   52          | ConstExpr . '%' ConstExpr
   52          | ConstExpr '%' ConstExpr .

    $default  reduce using rule 52 (ConstExpr)


State 89

   23 VarList: IDENTIFIER '[' ConstExpr ']' ',' . VarList

    IDENTIFIER  shift, and go to state 34

    VarList  go to state 113


State 90

   17 ParamList: DataType IDENTIFIER ',' . ParamList

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    CHAR   shift, and go to state 3
    VOID   shift, and go to state 4

    DataType   go to state 39
    ParamList  go to state 114


State 91

    9 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan $@1 . BlockStat

    '{'  shift, and go to state 56

    BlockStat  go to state 115


State 92

   30 ArgList: STRING_CONSTANT ',' . ArgList

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    STRING_CONSTANT   shift, and go to state 68
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    ArgList  go to state 116
    Expr     go to state 71
    Term     go to state 32


State 93

   25 FunCall: IDENTIFIER '(' ArgList ')' .

    $default  reduce using rule 25 (FunCall)


State 94

   29 ArgList: Expr ',' . ArgList

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    STRING_CONSTANT   shift, and go to state 68
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    ArgList  go to state 117
    Expr     go to state 71
    Term     go to state 32


State 95

   66 Term: IDENTIFIER '[' ConstExpr ']' .

    $default  reduce using rule 66 (Term)


State 96

   80 WhileStat: WHILE . '(' Expr ')' BlockStat

    '('  shift, and go to state 118


State 97

   78 ForStat: FOR . '(' VarDec ';' Expr ';' Expr ')' BlockStat
   79        | FOR . '(' Expr ';' Expr ';' Expr ')' BlockStat

    '('  shift, and go to state 119


State 98

   72 IfStat: IF . '(' Expr ')' SingleStat
   73       | IF . '(' Expr ')' BlockStat
   74       | IF . '(' Expr ')' SingleStat ELSE BlockStat
   75       | IF . '(' Expr ')' BlockStat ELSE BlockStat
   76       | IF . '(' Expr ')' BlockStat ELSE SingleStat
   77       | IF . '(' Expr ')' SingleStat ELSE SingleStat

    '('  shift, and go to state 120


State 99

   27 ReturnStat: RETURN .
   28           | RETURN . Expr

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    $default  reduce using rule 27 (ReturnStat)

    FunCall  go to state 30
    Expr     go to state 121
    Term     go to state 32


State 100

   43 SingleStat: BREAK . ';'

    ';'  shift, and go to state 122


State 101

   44 SingleStat: CONTINUE . ';'

    ';'  shift, and go to state 123


State 102

   36 SingleStat: ';' .

    $default  reduce using rule 36 (SingleStat)


State 103

   19 VarDec: DataType . VarList

    IDENTIFIER  shift, and go to state 34

    VarList  go to state 16


State 104

   39 SingleStat: VarDec . ';'

    ';'  shift, and go to state 124


State 105

   38 SingleStat: ReturnStat . ';'

    ';'  shift, and go to state 125


State 106

   46 BlockStat: '{' $@2 StatType . '}'

    '}'  shift, and go to state 126


State 107

   33 StatType: SingleStat . StatType

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    $default  reduce using rule 35 (StatType)

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    StatType    go to state 127
    SingleStat  go to state 107
    BlockStat   go to state 108
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 108

   34 StatType: BlockStat . StatType

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    $default  reduce using rule 35 (StatType)

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    StatType    go to state 128
    SingleStat  go to state 107
    BlockStat   go to state 108
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 109

   37 SingleStat: Expr . ';'
   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ';'  shift, and go to state 129


State 110

   40 SingleStat: IfStat .

    $default  reduce using rule 40 (SingleStat)


State 111

   42 SingleStat: ForStat .

    $default  reduce using rule 42 (SingleStat)


State 112

   41 SingleStat: WhileStat .

    $default  reduce using rule 41 (SingleStat)


State 113

   23 VarList: IDENTIFIER '[' ConstExpr ']' ',' VarList .

    $default  reduce using rule 23 (VarList)


State 114

   17 ParamList: DataType IDENTIFIER ',' ParamList .

    $default  reduce using rule 17 (ParamList)


State 115

    9 FunDef: DataType IDENTIFIER OpenParan ParamList CloseParan $@1 BlockStat .

    $default  reduce using rule 9 (FunDef)


State 116

   30 ArgList: STRING_CONSTANT ',' ArgList .

    $default  reduce using rule 30 (ArgList)


State 117

   29 ArgList: Expr ',' ArgList .

    $default  reduce using rule 29 (ArgList)


State 118

   80 WhileStat: WHILE '(' . Expr ')' BlockStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 130
    Term     go to state 32


State 119

   78 ForStat: FOR '(' . VarDec ';' Expr ';' Expr ')' BlockStat
   79        | FOR '(' . Expr ';' Expr ';' Expr ')' BlockStat

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    DataType  go to state 103
    VarDec    go to state 131
    FunCall   go to state 30
    Expr      go to state 132
    Term      go to state 32


State 120

   72 IfStat: IF '(' . Expr ')' SingleStat
   73       | IF '(' . Expr ')' BlockStat
   74       | IF '(' . Expr ')' SingleStat ELSE BlockStat
   75       | IF '(' . Expr ')' BlockStat ELSE BlockStat
   76       | IF '(' . Expr ')' BlockStat ELSE SingleStat
   77       | IF '(' . Expr ')' SingleStat ELSE SingleStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 133
    Term     go to state 32


State 121

   28 ReturnStat: RETURN Expr .
   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55

    $default  reduce using rule 28 (ReturnStat)


State 122

   43 SingleStat: BREAK ';' .

    $default  reduce using rule 43 (SingleStat)


State 123

   44 SingleStat: CONTINUE ';' .

    $default  reduce using rule 44 (SingleStat)


State 124

   39 SingleStat: VarDec ';' .

    $default  reduce using rule 39 (SingleStat)


State 125

   38 SingleStat: ReturnStat ';' .

    $default  reduce using rule 38 (SingleStat)


State 126

   46 BlockStat: '{' $@2 StatType '}' .

    $default  reduce using rule 46 (BlockStat)


State 127

   33 StatType: SingleStat StatType .

    $default  reduce using rule 33 (StatType)


State 128

   34 StatType: BlockStat StatType .

    $default  reduce using rule 34 (StatType)


State 129

   37 SingleStat: Expr ';' .

    $default  reduce using rule 37 (SingleStat)


State 130

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   80 WhileStat: WHILE '(' Expr . ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ')'  shift, and go to state 134


State 131

   78 ForStat: FOR '(' VarDec . ';' Expr ';' Expr ')' BlockStat

    ';'  shift, and go to state 135


State 132

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   79 ForStat: FOR '(' Expr . ';' Expr ';' Expr ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ';'  shift, and go to state 136


State 133

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   72 IfStat: IF '(' Expr . ')' SingleStat
   73       | IF '(' Expr . ')' BlockStat
   74       | IF '(' Expr . ')' SingleStat ELSE BlockStat
   75       | IF '(' Expr . ')' BlockStat ELSE BlockStat
   76       | IF '(' Expr . ')' BlockStat ELSE SingleStat
   77       | IF '(' Expr . ')' SingleStat ELSE SingleStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ')'  shift, and go to state 137


State 134

   80 WhileStat: WHILE '(' Expr ')' . BlockStat

    '{'  shift, and go to state 56

    BlockStat  go to state 138


State 135

   78 ForStat: FOR '(' VarDec ';' . Expr ';' Expr ')' BlockStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 139
    Term     go to state 32


State 136

   79 ForStat: FOR '(' Expr ';' . Expr ';' Expr ')' BlockStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 140
    Term     go to state 32


State 137

   72 IfStat: IF '(' Expr ')' . SingleStat
   73       | IF '(' Expr ')' . BlockStat
   74       | IF '(' Expr ')' . SingleStat ELSE BlockStat
   75       | IF '(' Expr ')' . BlockStat ELSE BlockStat
   76       | IF '(' Expr ')' . BlockStat ELSE SingleStat
   77       | IF '(' Expr ')' . SingleStat ELSE SingleStat

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    SingleStat  go to state 141
    BlockStat   go to state 142
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 138

   80 WhileStat: WHILE '(' Expr ')' BlockStat .

    $default  reduce using rule 80 (WhileStat)


State 139

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   78 ForStat: FOR '(' VarDec ';' Expr . ';' Expr ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ';'  shift, and go to state 143


State 140

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   79 ForStat: FOR '(' Expr ';' Expr . ';' Expr ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ';'  shift, and go to state 144


State 141

   72 IfStat: IF '(' Expr ')' SingleStat .
   74       | IF '(' Expr ')' SingleStat . ELSE BlockStat
   77       | IF '(' Expr ')' SingleStat . ELSE SingleStat

    ELSE  shift, and go to state 145

    $default  reduce using rule 72 (IfStat)


State 142

   73 IfStat: IF '(' Expr ')' BlockStat .
   75       | IF '(' Expr ')' BlockStat . ELSE BlockStat
   76       | IF '(' Expr ')' BlockStat . ELSE SingleStat

    ELSE  shift, and go to state 146

    $default  reduce using rule 73 (IfStat)


State 143

   78 ForStat: FOR '(' VarDec ';' Expr ';' . Expr ')' BlockStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 147
    Term     go to state 32


State 144

   79 ForStat: FOR '(' Expr ';' Expr ';' . Expr ')' BlockStat

    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    '('               shift, and go to state 29

    FunCall  go to state 30
    Expr     go to state 148
    Term     go to state 32


State 145

   74 IfStat: IF '(' Expr ')' SingleStat ELSE . BlockStat
   77       | IF '(' Expr ')' SingleStat ELSE . SingleStat

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    SingleStat  go to state 149
    BlockStat   go to state 150
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 146

   75 IfStat: IF '(' Expr ')' BlockStat ELSE . BlockStat
   76       | IF '(' Expr ')' BlockStat ELSE . SingleStat

    INT               shift, and go to state 1
    FLOAT             shift, and go to state 2
    WHILE             shift, and go to state 96
    FOR               shift, and go to state 97
    IF                shift, and go to state 98
    CHAR              shift, and go to state 3
    VOID              shift, and go to state 4
    RETURN            shift, and go to state 99
    BREAK             shift, and go to state 100
    CONTINUE          shift, and go to state 101
    INTEGER_CONSTANT  shift, and go to state 25
    IDENTIFIER        shift, and go to state 26
    INCREMENT         shift, and go to state 27
    DECREMENT         shift, and go to state 28
    ';'               shift, and go to state 102
    '('               shift, and go to state 29
    '{'               shift, and go to state 56

    DataType    go to state 103
    VarDec      go to state 104
    FunCall     go to state 30
    ReturnStat  go to state 105
    SingleStat  go to state 151
    BlockStat   go to state 152
    Expr        go to state 109
    Term        go to state 32
    IfStat      go to state 110
    ForStat     go to state 111
    WhileStat   go to state 112


State 147

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   78 ForStat: FOR '(' VarDec ';' Expr ';' Expr . ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ')'  shift, and go to state 153


State 148

   55 Expr: Expr . '+' Expr
   56     | Expr . '-' Expr
   57     | Expr . '/' Expr
   58     | Expr . '*' Expr
   59     | Expr . '%' Expr
   60     | Expr . '<' Expr
   61     | Expr . '>' Expr
   62     | Expr . '=' Expr
   79 ForStat: FOR '(' Expr ';' Expr ';' Expr . ')' BlockStat

    '='  shift, and go to state 48
    '<'  shift, and go to state 49
    '>'  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '/'  shift, and go to state 53
    '*'  shift, and go to state 54
    '%'  shift, and go to state 55
    ')'  shift, and go to state 154


State 149

   77 IfStat: IF '(' Expr ')' SingleStat ELSE SingleStat .

    $default  reduce using rule 77 (IfStat)


State 150

   74 IfStat: IF '(' Expr ')' SingleStat ELSE BlockStat .

    $default  reduce using rule 74 (IfStat)


State 151

   76 IfStat: IF '(' Expr ')' BlockStat ELSE SingleStat .

    $default  reduce using rule 76 (IfStat)


State 152

   75 IfStat: IF '(' Expr ')' BlockStat ELSE BlockStat .

    $default  reduce using rule 75 (IfStat)


State 153

   78 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' . BlockStat

    '{'  shift, and go to state 56

    BlockStat  go to state 155


State 154

   79 ForStat: FOR '(' Expr ';' Expr ';' Expr ')' . BlockStat

    '{'  shift, and go to state 56

    BlockStat  go to state 156


State 155

   78 ForStat: FOR '(' VarDec ';' Expr ';' Expr ')' BlockStat .

    $default  reduce using rule 78 (ForStat)


State 156

   79 ForStat: FOR '(' Expr ';' Expr ';' Expr ')' BlockStat .

    $default  reduce using rule 79 (ForStat)
